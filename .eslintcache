[{"C:\\Users\\Devid\\Desktop\\hakaton\\src\\index.js":"1","C:\\Users\\Devid\\Desktop\\hakaton\\src\\App.js":"2","C:\\Users\\Devid\\Desktop\\hakaton\\src\\reportWebVitals.js":"3","C:\\Users\\Devid\\Desktop\\hakaton\\src\\components\\ProductGrid.js":"4","C:\\Users\\Devid\\Desktop\\hakaton\\src\\api\\ProductService.js":"5","C:\\Users\\Devid\\Desktop\\hakaton\\src\\api\\common.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":218,"mtime":1611528565326,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2695,"mtime":1611528536873,"results":"11","hashOfConfig":"8"},{"size":387,"mtime":1611528536973,"results":"12","hashOfConfig":"8"},{"size":57,"mtime":1611528536976,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"kkzpfz",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Devid\\Desktop\\hakaton\\src\\index.js",[],["29","30"],"C:\\Users\\Devid\\Desktop\\hakaton\\src\\App.js",["31"],"import logo from './logo.svg';\nimport './App.css';\nimport ProductGrid from \"./components/ProductGrid\"\nfunction App() {\n  return (\n    <div className=\"App\">\n        <ProductGrid/>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Devid\\Desktop\\hakaton\\src\\reportWebVitals.js",[],"C:\\Users\\Devid\\Desktop\\hakaton\\src\\components\\ProductGrid.js",["32","33","34","35"],"\r\nimport React, { useState, useEffect, memoize } from 'react';\r\nimport ProductService from \"../api/ProductService\"\r\nimport { Masonry, useInfiniteLoader } from 'masonic'\r\nimport \"../styles/ProductGrid.scss\"\r\n\r\nexport default function ProductGrid() {\r\n    const [products, setProducts] = useState([])\r\n    const [pageSettings, setPageSettings] = useState({\r\n        page: 2,\r\n        stop: false\r\n    });\r\n    const [search, setSearch] = useState(\"крупа\")\r\n\r\n    const reload = () => {\r\n        new ProductService().get(null, search).then(res => setProducts(res))\r\n    }\r\n\r\n    useEffect(reload, [])\r\n\r\n    const fetchMoreItems = (startIndex, stopIndex, currentItems) => {\r\n        if (!pageSettings.stop) {\r\n            setPageSettings((prev) =>{\r\n                return {\r\n                    stop: true,\r\n                    page: prev.page\r\n                }\r\n            });\r\n            new ProductService().get(null, search, pageSettings.page).then(nextItems => {\r\n                if (nextItems.length > 0) {\r\n                    setPageSettings((prev) =>{\r\n                        return {\r\n                            stop: false,\r\n                            page: prev.page + 1\r\n                        }\r\n                    });\r\n                    setProducts((current) => {\r\n                        return [...current, ...nextItems]\r\n                    })\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const getMassa = (item) => {\r\n        return item.unit === \"kg\" ? \"1 кг\" : `${item.weight} грамм`;\r\n    }\r\n\r\n    const renderElement = ({data, width}) => {\r\n        return (\r\n            <div className=\"product\">\r\n                <img width={width} src={data.thumbnail} />\r\n                <div class=\"info\">\r\n                    <div>\r\n                        {data.title}\r\n                    </div>\r\n                    <div>\r\n                        {getMassa(data)}\r\n                    </div>\r\n                    <div>\r\n                        {`${data.price || data.old_price} грн `}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const maybeLoadMore = useInfiniteLoader(fetchMoreItems, {minimumBatchSize: 0, threshold: 1, isItemLoaded: (index, items) => !!items[index]});\r\n    return (\r\n        <div>\r\n            {   \r\n                <Masonry\r\n                    className={'product-list-container'} // default ''\r\n                    elementType={'ul'} // default 'div'\r\n                    onRender={maybeLoadMore}\r\n                    render={renderElement}\r\n                    items={products}\r\n                >\r\n                </Masonry>\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\Devid\\Desktop\\hakaton\\src\\api\\ProductService.js",[],"C:\\Users\\Devid\\Desktop\\hakaton\\src\\api\\common.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":12},{"ruleId":"40","severity":1,"message":"44","line":2,"column":38,"nodeType":"42","messageId":"43","endLine":2,"endColumn":45},{"ruleId":"40","severity":1,"message":"45","line":13,"column":20,"nodeType":"42","messageId":"43","endLine":13,"endColumn":29},{"ruleId":"46","severity":1,"message":"47","line":19,"column":23,"nodeType":"48","endLine":19,"endColumn":25,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":52,"column":17,"nodeType":"52","endLine":52,"endColumn":59},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'memoize' is defined but never used.","'setSearch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.","ArrayExpression",["55"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [search]",{"range":"58","text":"59"},[594,596],"[search]"]